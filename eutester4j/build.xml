<?xml version="1.0" encoding="UTF-8"?>

<!--<project name="Eutester4J" basedir="." default="clean-build">-->
<project name="Eutester4J" basedir="." default="clean-build" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- These properties' default values can be overridden on the ant command line, e.g: -->
	<!-- ant clean-build -Deucarc=/my/path/to/eucarc -Dtests=CI-run.xml -->
    <property name="src.dir" value="com/eucalyptus/tests/awssdk"/>
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="deps.dir" value="dependencies"/>
    <property name="testng.output.dir" value="eutester4j_results"/>
    <property name="eucarc" value="eucarc"/>
    <property name="endpoints" value="endpoints.xml"/>
    <property name="tests" value="AllTestsSuite.xml"/>
    <property name="ivy.cache.ttl.default" value="1d"/>

    <!-- bootstrap-ivy -->
    <target name="bootstrap-ivy" description="Install ivy">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.3.0/ivy-2.3.0.jar"/>
        <ivy:settings file="ivysettings.xml"/>
    </target>

    <!-- download testng and AWS JAVA SDK -->
    <target name="download-deps" depends="bootstrap-ivy">
        <mkdir dir="${deps.dir}"/>
        <ivy:retrieve conf="default" pattern="${deps.dir}/[artifact]-[revision].[ext]"/>
        <gunzip src="zerofile.gz" dest="." />
    </target>

    <!-- set classpath to include dependencies and build output -->
    <path id="classpath">
        <fileset dir="${deps.dir}">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${classes.dir}"/>
    </path>

    <!-- delete build and results directories -->
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${deps.dir}"/>
    </target>

    <!-- delete build, results and dependencies directories -->
    <target name="clean-all" depends="clean">
        <delete dir="${testng.output.dir}"/>
    </target>

    <!-- compile all classes of src.dir -->
    <target name="compile" depends="download-deps">
        <mkdir dir="${classes.dir}"/>
        <javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
        <copy file="log4j.properties" todir="${classes.dir}"/>
        <gunzip src="zerofile.gz" dest="${classes.dir}" />
    </target>

    <!-- Run the tests defined by ${tests}, WITHOUT doing any of the dependent tasks -->
    <!-- Only do this if you're sure all dependencies are there and nothing needs to be recompiled! -->
	<!-- TODO: Have the other tasks check to see if they need to run, or what (if anything) -->
	<!-- needs to be recompiled, to speed up the process. Then we could do away with this target -->
	<!-- and roll it back into runTestNG. -->
    <target name="test-only">
        <taskdef name="testng" classname="org.testng.TestNGAntTask">
            <classpath>
                <fileset dir="${deps.dir}">
                    <include name="testng-*.jar"/>
                </fileset>
            </classpath>
        </taskdef>

        <mkdir dir="${testng.output.dir}"/>
        <testng outputdir="${testng.output.dir}" classpathref="classpath" haltonfailure="true">
            <xmlfileset dir="./TestSuites" includes="${tests}"/>
            <jvmarg value="-Deucarc=${eucarc}" />
            <jvmarg value="-Dcom.amazonaws.regions.RegionUtils.fileOverride=${endpoints}"/>
        </testng>
    </target>

    <!-- compile all and run the tests defined by ${tests} -->
    <target name="runTestNG" depends="compile, test-only"/>

    <!-- clean, build and run tests -->
    <target name="clean-build" depends="clean, runTestNG"/>

    <!-- clean all, build and run tests -->
    <target name="clean-all-build" depends="clean-all, runTestNG"/>
</project>
